name: Build EFI bootloader

on:
  push:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          target: x86_64-unknown-uefi, aarch64-unknown-uefi

      - name: Build x86_64 UEFI bootloader
        run: |
          cargo build --profile release-lto --target x86_64-unknown-uefi
          mv target/x86_64-unknown-uefi/release-lto/bootloader-rust.efi BOOTX64.EFI

      - name: Build aarch64 UEFI bootloader
        run: |
          cargo build --profile release-lto --target aarch64-unknown-uefi
          mv target/aarch64-unknown-uefi/release-lto/bootloader-rust.efi BOOTAA64.EFI

      - name: Upload x86_64 EFI artifact
        uses: actions/upload-artifact@v4
        with:
          name: BOOTX64.EFI
          path: BOOTX64.EFI

      - name: Upload aarch64 EFI artifact
        uses: actions/upload-artifact@v4
        with:
          name: BOOTAA64.EFI
          path: BOOTAA64.EFI

      - name: Deploy to CDN
        if: github.ref == 'refs/heads/master'
        run: |
          mkdir artifacts
          mv BOOTX64.EFI artifacts/
          mv BOOTAA64.EFI artifacts/
          cat <<EOF > ./rclone.conf
          [s3]
          type = s3
          provider = Cloudflare
          access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          endpoint = ${{ secrets.AWS_ENDPOINT_URL }}
          acl = public-read
          no_check_bucket = true
          EOF
          docker run -v ./rclone.conf:/config/rclone/rclone.conf -v "${{ github.workspace }}/artifacts:/artifacts" rclone/rclone:latest -vv copy /artifacts/ s3:${{ secrets.AWS_BUCKET }}/
          rm ./rclone.conf
